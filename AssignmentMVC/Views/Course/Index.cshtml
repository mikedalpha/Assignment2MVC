@model PagedList.IPagedList<AssignmentMVC.Models.Course>
@using PagedList.Mvc

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<div class="row">
    <div class="col">
        <div class="container">
            <h1 class="mt-3">All Courses</h1>
            <div class="mt-4 mb-0">
                @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-success" })
            </div>

            <br />

            @using (Html.BeginForm("Index", "Course", FormMethod.Get))
            {
                <p>
                    Find by title: @Html.TextBox("searchString", ViewBag.CurrentFilter as string)
                    <input type="submit" value="Search" class="btn btn-primary" />
                    <input id="resetButtonT" type="button" value="Reset" class="btn btn-info btn-sm" />
                </p>
            }

            <br />

            <!--Table-->
            <table class="table table-hover table-responsive-lg">
                <tr>
                    <th>
                        @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.TitleSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        @Html.ActionLink("Stream", "Index", new { sortOrder = ViewBag.StreamSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        Type
                    </th>
                    <th>
                        @Html.ActionLink("Start Date", "Index", new { sortOrder = ViewBag.StartDateSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        @Html.ActionLink("End Date", "Index", new { sortOrder = ViewBag.EndDateSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        Assigned Trainers
                    </th>
                    <th>
                        Assigned Students
                    </th>
                    <th>
                        Assignments
                    </th>
                    <th>
                        Actions
                    </th>
                </tr>

                @foreach (var course in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => course.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => course.Stream)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => course.Type)
                        </td>
                        <td>
                            @course.StartDate.ToString("d")
                        </td>
                        <td>
                            @course.EndDate.ToString("d")
                        </td>
                        <td>

                            <ul>
                                @foreach (var trainer in course.Trainers)
                                {
                                    <li>@trainer.FirstName @trainer.LastName</li>
                                }
                            </ul>
                        </td>
                        <td>

                            <ul>
                                @foreach (var student in course.Students)
                                {
                                    <li>@student.FirstName @student.LastName</li>
                                }
                            </ul>
                        </td>
                        <td>

                            <ul>
                                @foreach (var assignment in course.Assignments)
                                {
                                    <li>@assignment.Title</li>
                                }
                            </ul>
                        </td>
                        <td>
                            @Html.ActionLink("Details", "Details", new { id = course.CourseId }, new { @class = "btn btn-secondary" })
                            @Html.ActionLink("Edit", "Edit", new { id = course.CourseId }, new { @class = "btn btn-warning" })
                            @Html.ActionLink("Delete", "Delete", new { id = course.CourseId }, new { @class = "btn btn-danger" })
                        </td>
                    </tr>
                }
            </table>
            <br />
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

            @Html.PagedListPager(Model, page => Url.Action("Index",
                new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        </div>
    </div>
</div>

@section scripts
{
    <script>
        $("#resetButtonT").click(function (e) {

            $("#searchString").val("");
        }
        );
    </script>
}

