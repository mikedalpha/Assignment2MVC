@model AssignmentMVC.Models.ViewModels.AssignmentViewModel

@{
    ViewBag.Title = "Create";
}
<div class="container">

    <h2>Create</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Assignment</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <strong style=color:red>*</strong>@Html.LabelFor(model => model.Assignment.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Assignment.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Assignment.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <strong style=color:red>*</strong>@Html.LabelFor(model => model.Assignment.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Assignment.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Assignment.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <strong style=color:red>*</strong>@Html.LabelFor(model => model.Assignment.SubDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Assignment.SubDateTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Assignment.SubDateTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <strong style=color:red>*</strong>@Html.LabelFor(model => model.Assignment.OralMark, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Assignment.OralMark, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Assignment.OralMark, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <strong style=color:red>*</strong>@Html.LabelFor(model => model.Assignment.TotalMark, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Assignment.TotalMark, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Assignment.TotalMark, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("StudentList", "Assign to Student", htmlAttributes: new { @class = "control -label col-md-2" })
                <div class="col-md-10">
                    @Html.ListBox("StudentList", null, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("CourseList", "Assign to Course", htmlAttributes: new { @class = "control -label col-md-2" })
                <div class="col-md-10">
                    @Html.ListBox("CourseList", null, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
