@model PagedList.IPagedList<AssignmentMVC.Models.Assignment>
@using PagedList.Mvc

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<div class="row">
    <div class="col">
        <div class="container">
            <h1 class="mt-3">All Assignments</h1>
            <div class="mt-4 mb-0">
                @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-success" })
            </div>

            <br />

            @using (Html.BeginForm("Index", "Assignment", FormMethod.Get))
            {
                <p>
                    Find by title: @Html.TextBox("searchString", ViewBag.CurrentFilter as string)
                    <input type="submit" value="Search" />
                </p>
            }

            <br />

            <!--Table-->

            <table class="table table-hover table-responsive-lg">
                <tr>
                    <th>
                        @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.TitleSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        Description
                    </th>
                    <th>
                        @Html.ActionLink("Submission Date", "Index", new { sortOrder = ViewBag.SubmissionDateSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        @Html.ActionLink("Oral Mark", "Index", new { sortOrder = ViewBag.OralMarkSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        @Html.ActionLink("Total Mark", "Index", new { sortOrder = ViewBag.TotalMarkSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        Assigned To
                    </th>
                    <th>
                        Taught In
                    </th>
                    <th>
                        Actions
                    </th>
                </tr>

                @foreach (var assignment in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => assignment.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => assignment.Description)
                        </td>
                        <td>
                            @assignment.SubDateTime.ToString("d")
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => assignment.OralMark)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => assignment.TotalMark)
                        </td>
                        <td>
                            <ul>
                                @foreach (var student in assignment.Students)
                                {
                                    <li>@student.FirstName @student.LastName</li>
                                }
                            </ul>
                        </td>
                        <td>
                            <ul>
                                @foreach (var course in assignment.Courses)
                                {
                                    <li>@course.Title</li>
                                }
                            </ul>
                        </td>
                        <td>
                            @Html.ActionLink("Details", "Details", new { id = assignment.AssignmentId }, new { @class = "btn btn-secondary" })
                            @Html.ActionLink("Edit", "Edit", new { id = assignment.AssignmentId }, new { @class = "btn btn-warning" })
                            @Html.ActionLink("Delete", "Delete", new { id = assignment.AssignmentId }, new { @class = "btn btn-danger" })
                        </td>
                    </tr>
                }
            </table>
            <br />
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

            @Html.PagedListPager(Model, page => Url.Action("Index",
                new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        </div>
    </div>
</div>
