@model AssignmentMVC.Models.ViewModels.TrainerViewModel

@{
    ViewBag.Title = "Create";
}

<div class="container">
    <h2>Create</h2>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Trainer</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <strong style=color:red>*</strong>@Html.LabelFor(model => model.Trainer.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Trainer.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "Only letters, must be 2-50 characters" } })
                    @Html.ValidationMessageFor(model => model.Trainer.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <strong style=color:red>*</strong>@Html.LabelFor(model => model.Trainer.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Trainer.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Only letters, must be 2-50 characters" } })
                    @Html.ValidationMessageFor(model => model.Trainer.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <strong style=color:red>*</strong>@Html.LabelFor(model => model.Trainer.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Trainer.Subject, new { htmlAttributes = new { @class = "form-control", placeholder = "Only letters, must be 2-50 characters" } })
                    @Html.ValidationMessageFor(model => model.Trainer.Subject, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("CourseList", "Assigned Courses", htmlAttributes: new { @class = "control -label col-md-2" })
                <div class="col-md-10">
                    @Html.ListBox("CourseList", null, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-success" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
    </div>
</div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
